# 08_update_product_tool.py

import os
import xmlrpc.client
from dotenv import load_dotenv

load_dotenv()
print("--- Odoo Product Updater Test Script ---")

# --- 1. Odoo Connection Logic ---
try:
    url = os.environ["ODOO_URL"]
    db = os.environ["ODOO_DB"]
    username = os.environ["ODOO_USERNAME"]
    password = os.environ["ODOO_PASSWORD"]
    common = xmlrpc.client.ServerProxy(f'{url}/xmlrpc/2/common')
    uid = common.authenticate(db, username, password, {})
    models = xmlrpc.client.ServerProxy(f'{url}/xmlrpc/2/object')
    print("‚úÖ Successfully connected and authenticated with Odoo.")
except Exception as e:
    print(f"‚ùå Failed to connect to Odoo. Error: {e}")
    exit()

# --- 2. The Main Test Logic ---
if __name__ == "__main__":
    # --- IMPORTANT: Change this to the name of a REAL product in your Odoo system ---
    product_to_update = "Inloopdouche 120" 
    
    try:
        # --- Step A: Find the product first to get its ID ---
        print(f"\nüîç Searching for product '{product_to_update}'...")
        product_ids = models.execute_kw(db, uid, password, 
            'product.product', 'search',
            [[['name', '=', product_to_update]]],
            {'limit': 1})

        if not product_ids:
            print(f"‚ùå Could not find the product '{product_to_update}'. Please check the name.")
            exit()
        
        product_id = product_ids[0]
        print(f"‚úÖ Found product with ID: {product_id}")

        # --- Step B: Define the new data and call the 'write' method ---
        new_data = {
            'description_sale': "This is a new, wonderfully polished product description generated by my AI assistant!",
            # You could also update the name: 'name': "Polished Test Product"
        }

        print(f"üîÑ Updating product ID {product_id} with new data...")
        
        # This is the 'write' method call.
        # It takes a list of IDs to update (in our case, just one)
        # and a dictionary of the values to change.
        models.execute_kw(db, uid, password, 
            'product.product', 'write',
            [[product_id], new_data])

        print("\n‚úÖ SUCCESS! Product has been updated in Odoo.")
        print("Please check your Odoo application to see the new description.")

    except Exception as e:
        print(f"‚ùå An error occurred during the update process: {e}")